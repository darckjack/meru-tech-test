require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe "/games", type: :request do
  # This should return the minimal set of attributes required to create a valid
  # Game. As you add validations to Game, be sure to
  # adjust the attributes here as well.
  let(:valid_attributes) do
    {
      cols: 5,
      rows: 5,
      mines: 5
    }
  end

  let(:invalid_attributes) do
    {
      cols: 2,
      rows: 2,
      mines: 5
    }
  end

  describe "GET /index" do
    it "renders a successful response" do
      Game.create! valid_attributes
      get games_url, as: :json
      expect(response).to be_successful
    end
  end

  describe "GET /show" do
    it "renders a successful response" do
      game = Game.create! valid_attributes
      get game_url(game), as: :json
      expect(response).to be_successful
    end
  end

  describe "POST /create" do
    context "with valid parameters" do
      it "creates a new Game" do
        expect do
          post games_url,
               params: valid_attributes, as: :json
        end.to change(Game, :count).by(1)
      end

      it "renders a JSON response with the new game" do
        post games_url,
             params: valid_attributes, as: :json
        expect(response).to have_http_status(:created)
      end
    end

    context "with invalid parameters" do
      it "does not create a new Game" do
        expect do
          post games_url,
               params: invalid_attributes, as: :json
        end.to change(Game, :count).by(0)
      end

      it "renders a JSON response with errors for the new game" do
        post games_url,
             params: invalid_attributes, as: :json
        expect(response).to have_http_status(:unprocessable_entity)
      end
    end
  end
end
